Ключевые моменты в TSL:
	Confidentiality - никто третий не может прочитать сообщение
	Integrity - никто третий не может изменить сообщение
	Authentication - клиент или сервер действительно являются клиентом или сервером, а не кем-то другим


MAC - message auth code - сообщения и секретного кода через хэш код
	Важен порядок расположения сообщения и секретного кода.

Алгоритм хэширования:
	на входе сообщение, на выходе хэш-сумма. Например MD5, SHA256 и ...
МАС:
	на входе сообщение + секретный код, на выходе хэш-сумма. Например HMAC (Hash Based Message Auth code)
	
Шифрование для обеспечения Confidentiality. Шифрование преобразует данные: hello - ellho
	Симметричное шифрование - подходит для больших данных
		шифрует и дешифрует данные одними и теми же ключами
		оно быстрее. Зашифрованный текст того же размера
		публичный ключ должен быть передан явно
		менее безопасно
		Алгоритмы: AES, ChaCha20. Примерный размер ключа ~200 бит
		
	Асимметричное шифрование - Не предназначено для больших объёмов данных
		шифрует и дешифрует данные разными ключами(encyption key и decryption key). encyption key и decryption key могут быть взаимозаменяемые, напр: шифровать ключом дешифрования и наоборот
		Оно медленне
		Зашифрованный текст увеличивается в размере
		Более безопасно
		Алгоритмы: DSA, RSA, Diffie-Hoffman, ECDSA, ECDH. Примерный размер ключа ~2048 бит

	Можно использовать ассиметричное шифрование для обмена ключами и симметричное шифрование для передачи больших объемов данных - это и есть TLS

Public and Private Keys

Signature:
Integrity отправляем хэш сообщения и само сообщение. На другой стороне опять вычисляется хэш сообщения и если хэш сообщения и соответсвует переданному хэшу сообщения, значит сообщение - полное
Используется приватный ключ отправителя для того, чтобьы зашифровать хэш сумму сообщения - это и есть signature		
